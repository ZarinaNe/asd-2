# 1.Нахождение выпуклой оболочки множества точек
# В данной задаче требуется ввести N точек своими координатами (x,y). Затем требуется определить, существует ли выпуклая оболочка
# заданного множества точек.
# алгоритм Грэхема.

# Алгоритм Грэхема - это один из методов нахождения выпуклой оболочки множества точек в двумерном пространстве. Этот алгоритм
# работает за время O(n * log(n)), где n - количество точек. Этот код сначала находит точку с минимальной y-координатой и
# сортирует остальные точки по углу относительно этой точки. Затем он использует стек для построения выпуклой оболочки, начиная
# с первых двух отсортированных точек. В результате работы алгоритма выпуклая оболочка будет храниться в списке hull.


# функция определяет, с какой стороны от вектора AB находится точка C (положительное возвращаемое значение соответствует левой стороне,
# отрицательное — правой).
def rotate(A, B, C):
  return (B[0] - A[0]) * (C[1] - B[1]) - (B[1] - A[1]) * (C[0] - B[0])


def grahamscan(A):
  n = len(A)  # число точек
  P = list(range(n))  # список номеров точек

# ищется любая точка в A, гарантированно входящая в МВ: точка с наименьшей x-координатой (самая левая точка в A).
  for x in range(1, n):
    if A[P[x]][0] < A[P[0]][0]:  # если P[x]-ая точка лежит левее P[0]-ой точки
      P[x], P[0] = P[0], P[x]  # меняем местами номера этих точек

# сортировка всех точек по степени их левизны относительно стартовой точки
  for x in range(2, n):  # сортировка вставкой
    y = x
    while y > 1 and (rotate(A[P[0]], A[P[y - 1]], A[P[y]]) < 0):
      P[y], P[y - 1] = P[y - 1], P[y]
      y -= 1
  S = [P[0], P[1]]  # создаем стек

# просматриваем все остальные вершины, и отслеживаем направление поворота в них с точки зрения последних двух вершин в стеке S:
# если это направление отрицательно, то можно срезать угол удалением из стека последней вершины. Как только поворот оказывается
# положительным, срезание углов завершается, текущая вершина заносится в стек.
  for x in range(2, n):
    while rotate(A[S[-2]], A[S[-1]], A[P[x]]) < 0:
      del S[-1]  # pop(S)
    S.append(P[x])  # push(S,P[x])
  return S


# Ввод N точек
n = int(input("Введите количество точек: "))
points = []
for i in range(n):
  x, y = map(int, input().split())
  points.append((x, y))

# Выводим результат
print("Выпуклая оболочка:")
print(grahamscan(points))